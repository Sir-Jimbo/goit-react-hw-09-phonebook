{"version":3,"sources":["redux/phonebook/phonebook-selectors.js","components/Notification/Notification.jsx","components/Notification/Notification.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Logo/Logo.module.css","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Logo/Logo.jsx","pages/PhoneBookPage.js"],"names":["getFilter","state","phonebook","filter","getAllContacts","contacts","selectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","getError","error","Notification","message","dispatch","useDispatch","errorPb","useSelector","errorAuth","authSelectors","clearErrorPb","useCallback","phonebookActions","clearErrorAuth","authActions","clearError","useEffect","setTimeout","in","timeout","classNames","s","unmountOnExit","className","overlay","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","operations","fetchContacts","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","fetchContactError","addContact","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","useState","setName","setNumber","setMessage","saveMessage","note","handleChange","e","target","console","warn","container","onSubmit","preventDefault","find","item","label","input","type","placeholder","onChange","button","Filter","CSSTransition","appear","title","Contact","id","onClick","ContactList","TransitionGroup","component","list","map","onDeleteContact","Logo","logo","PhoneBookPage","isLoadingContacts","Spinner","ommountOnExit"],"mappings":"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","file":"static/js/4.d2a641a9.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phonebook.loading;\n\nconst getFilter = state => state.phonebook.filter;\n\nconst getAllContacts = state => state.phonebook.contacts;\n\nconst getError = state => state.phonebook.error;\n\n//Без мемоизации\n// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//         name.toLowerCase().includes(normalizedFilter),\n//     );\n// };\n\n//С мемоизацией\nconst getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter),\n        );\n    },\n);\n\nconst selectors = {\n    getLoading,\n    getFilter,\n    getVisibleContacts,\n    getAllContacts,\n    getError\n};\n\nexport default selectors;","import React, { useEffect, useCallback } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authActions from '../../redux/auth/auth-actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n   const dispatch = useDispatch();\r\n   const errorPb = useSelector(selectors.getError);\r\n   const errorAuth = useSelector(authSelectors.getError);\r\n   const clearErrorPb = useCallback(() => dispatch(phonebookActions.clearError()), [dispatch]);\r\n   const clearErrorAuth = useCallback(() => dispatch(authActions.clearError()), [dispatch]);\r\n\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         clearErrorAuth();\r\n      }, 2500);\r\n   }, [errorAuth, clearErrorAuth]);\r\n\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         clearErrorPb();\r\n      }, 2500);\r\n   }, [errorPb, clearErrorPb]);\r\n\r\n   return (\r\n      <CSSTransition\r\n         in={message}\r\n         timeout={250}\r\n         classNames={s}\r\n         unmountOnExit\r\n      >\r\n         <div className={s.overlay} >\r\n            <p className={s.message}>\r\n               {message}\r\n            </p>\r\n         </div>\r\n      </CSSTransition>\r\n   );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Notification_overlay__13cfF\",\"message\":\"Notification_message__39aLV\",\"enter\":\"Notification_enter__eNvAZ\",\"enterActive\":\"Notification_enterActive__34z5D\",\"exit\":\"Notification_exit__1eTq2\",\"exitActive\":\"Notification_exitActive__3N3ft\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2r271\",\"label\":\"ContactForm_label__4jA8B\",\"input\":\"ContactForm_input__3rd77\",\"button\":\"ContactForm_button__2Z_ve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2Uv33\",\"title\":\"Filter_title__1wMwU\",\"label\":\"Filter_label__1fMsg\",\"input\":\"Filter_input__2l4Y4\",\"appear\":\"Filter_appear__1Rgec\",\"appearActive\":\"Filter_appearActive__8hyTh\",\"exit\":\"Filter_exit__3vZQP\",\"exitActive\":\"Filter_exitActive__JHNm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__2ZKmC\",\"button\":\"Contact_button__1cB20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__3k_vr\",\"enterActive\":\"ContactList_enterActive__2EZzB\",\"exit\":\"ContactList_exit__4H11e\",\"exitActive\":\"ContactList_exitActive__14z2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__rlqmc\"};","import axios from 'axios';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError\n} from './phonebook-actions';\n\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactRequest());\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\n        .catch(error => dispatch(fetchContactError(error)));\n};\n\n// Option with async/await, try/catch\n\n// const fetchContacts = () => async dispatch => {\n//     dispatch(fetchContactRequest());\n\n//     try {\n//         const { data } = await axios.get('/contacts');\n\n//         dispatch(fetchContactSuccess(data));\n//     } catch (error) {\n//         dispatch(fetchContactSuccess(error.message));\n//     }\n// }\n\nconst addContact = (name, number) => dispatch => {\n    const contact = {\n        name,\n        number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = (contactId) => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst operations = {\n    fetchContacts,\n    addContact,\n    deleteContact\n};\n\nexport default operations;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations'\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport Notification from '../../components/Notification/Notification';\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm() {\r\n   const dispatch = useDispatch();\r\n   const [name, setName] = useState('');\r\n   const [number, setNumber] = useState('');\r\n   const [message, setMessage] = useState(null);\r\n\r\n   const contacts = useSelector(selectors.getAllContacts);\r\n   const onSubmit = (name, number) => dispatch(operations.addContact(name, number));\r\n\r\n   const saveMessage = (note) => {\r\n      setMessage(note);\r\n      setTimeout(() => {\r\n         setMessage(null);\r\n      }, 2500);\r\n   }\r\n\r\n   const handleChange = e => {\r\n      const { name, value } = e.target;\r\n\r\n      switch (name) {\r\n         case 'name':\r\n            setName(value);\r\n            break;\r\n\r\n         case 'number':\r\n            setNumber(value);\r\n            break;\r\n\r\n         default:\r\n            console.warn(`Тип поля name - ${name} не обрабатывается!`);\r\n      }\r\n   };\r\n\r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      if (name === '') {\r\n         saveMessage('Enter contact name, please!');\r\n         return;\r\n      }\r\n      if (number === '') {\r\n         saveMessage('Enter concact phone, please!');\r\n         return;\r\n      }\r\n      if (contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\r\n         saveMessage('Contact already exists!');\r\n         return;\r\n      }\r\n\r\n      onSubmit(name, number);\r\n      setName('');\r\n      setNumber('');\r\n   };\r\n\r\n   return (\r\n      <>\r\n\r\n         <Notification\r\n            message={message} />\r\n\r\n         <form className={s.container} onSubmit={handleSubmit}>\r\n\r\n            <label className={s.label}>\r\n               Name\r\n               </label>\r\n            <input\r\n               className={s.input}\r\n               type=\"text\"\r\n               name=\"name\"\r\n               placeholder=\"enter your name\"\r\n               value={name}\r\n               onChange={handleChange}\r\n            />\r\n            <label className={s.label}>\r\n               Phone number\r\n               </label>\r\n            <input\r\n               className={s.input}\r\n               type=\"tel\"\r\n               name=\"number\"\r\n               placeholder=\"enter your number\"\r\n               value={number}\r\n               onChange={handleChange} />\r\n            <button className={s.button} type=\"submit\">Add contact</button>\r\n         </form>\r\n      </>\r\n   );\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n   const dispatch = useDispatch();\r\n   const value = useSelector(selectors.getFilter);\r\n   const contacts = useSelector(selectors.getAllContacts);\r\n   const onChange = e => dispatch(phonebookActions.changeFilter(e.target.value));\r\n   return (\r\n      <CSSTransition\r\n         in={contacts.length > 1}\r\n         appear={true}\r\n         timeout={250}\r\n         classNames={s}\r\n         unmountOnExit\r\n      >\r\n         <div className={s.container}>\r\n\r\n            <h2 className={s.title}> Contacts </h2>\r\n            <label className={s.label}>\r\n               Find contacts by name:\r\n            </label>\r\n            <input\r\n               className={s.input}\r\n               placeholder=\"search by name\"\r\n               type=\"text\"\r\n               value={value}\r\n               onChange={onChange}\r\n            />\r\n\r\n         </div >\r\n      </CSSTransition>\r\n   );\r\n}","\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onClick }) => {\r\n   return (\r\n\r\n      <li key={id} className={s.item}>\r\n         <p className={s.contact}>{name}</p>\r\n         <p className={s.contact}>{number}</p>\r\n         <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={onClick}\r\n         >\r\n            x\r\n                  </button>\r\n      </li>\r\n   )\r\n}\r\n\r\nContact.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Contact from 'components/Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n   const dispatch = useDispatch();\r\n   const contacts = useSelector(selectors.getVisibleContacts);\r\n   const onDeleteContact = id => dispatch(operations.deleteContact(id));\r\n   return (\r\n      <TransitionGroup\r\n         component=\"ul\"\r\n         className={s.list}\r\n      >\r\n         {contacts.map(({ id, name, number }) => (\r\n            <CSSTransition\r\n               key={id}\r\n               timeout={250}\r\n               classNames={s}\r\n            >\r\n               <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  number={number}\r\n                  onClick={() => onDeleteContact(id)}\r\n               />\r\n            </CSSTransition>\r\n         ))\r\n         }\r\n      </TransitionGroup >\r\n\r\n   )\r\n}","import React from 'react';\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n   return (\r\n      <h1 className={s.logo}>Phonebook</h1>\r\n   )\r\n}\r\n\r\nexport default Logo;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport Logo from '../components/Logo/Logo';\nimport operations from '../redux/phonebook/phonebook-operations';\nimport Spinner from '../components/Spinner/Spinner';\nimport Notification from '../components/Notification/Notification';\nimport selectors from '../redux/phonebook/phonebook-selectors';\n\nexport default function PhoneBookPage() {\n    const contacts = useSelector(selectors.getAllContacts);\n    const isLoadingContacts = useSelector(selectors.getLoading);\n    const error = useSelector(selectors.getError);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(operations.fetchContacts());\n    }, [dispatch]);\n    return (\n        <>\n            <Logo />\n\n            <Notification\n                message={error} />\n\n            <ContactForm />\n\n            <Filter />\n\n            {isLoadingContacts && <Spinner />}\n\n            <CSSTransition\n                in={contacts.length > 0}\n                timeout={0}\n                ommountOnExit>\n                <ContactList />\n            </CSSTransition>\n\n\n\n        </>\n    );\n};\n\nPhoneBookPage.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    fetchContacts: PropTypes.func,\n    isLoadingContacts: PropTypes.bool,\n    error: PropTypes.string\n};"],"sourceRoot":""}