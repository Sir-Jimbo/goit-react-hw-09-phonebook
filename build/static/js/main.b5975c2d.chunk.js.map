{"version":3,"sources":["components/Navigation/Navigation.js","images/default-avatar.png","components/button/button.js","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.js","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Section/Section.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.jsx","redux/phonebook/phonebook-reducers.js","redux/auth/auth-reducer.js","redux/store.js","index.jsx","redux/phonebook/phonebook-actions.js","redux/auth/auth-selectors.js","components/Spinner/Spinner.jsx","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/UserMenu/UserMenu.module.css","components/Header/Header.module.css","components/Section/Section.module.css"],"names":["Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","className","to","exact","activeClassName","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","ButtonMenu","onClick","classes","Button","UserMenu","dispatch","useDispatch","name","getUsername","onLogOut","useCallback","authOperations","logOut","s","container","src","defaultAvatar","alt","width","avatar","AuthNav","Header","Layout","children","Section","PrivateRoute","redirectTo","routeProps","token","getToken","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","useEffect","getCurrentUser","fallback","Spinner","path","component","initialState","contacts","createReducer","fetchContactSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","setError","error","clearError","combineReducers","initialUserState","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","document","getElementById","createAction","getError","getLoading","type","timeout","axios","defaults","baseURL","headers","common","Authorization","register","credential","a","post","response","data","message","logIn","getState","persistedToken","get","module","exports"],"mappings":"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","file":"static/js/main.b5975c2d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav className=\"nav\">\n      {isLoggedIn ?\n        (<NavLink\n          to=\"/\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Home\n        </NavLink>\n        ) : (\n          <NavLink\n            to=\"/contacts\"\n            exact\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Phonebook\n          </NavLink>\n        )}\n    </nav>\n  );\n}","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #f44336 30%, #f44336 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 36,\n    padding: '0 20px',\n  },\n});\n\nexport default function ButtonMenu({onClick}) {\n  const classes = useStyles();\n  return <Button onClick={onClick} className={classes.root}>Logout</Button>;\n}","import React, { useCallback } from 'react';\nimport s from './UserMenu.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\nimport defaultAvatar from '../../images/default-avatar.png';\nimport ButtonMenu from '../button/button';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  const onLogOut = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div className={s.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" className={s.avatar} />\n      <span className={s.name}>Welcome, {name}</span>\n      {/* My button\n    <button className={s.MenuButton} type=\"button\" onClick={onLogout}>\n      Logout\n    </button> */}\n\n      {/* Button from Material UI */}\n      <ButtonMenu onClick={onLogOut} />\n    </div>\n  );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Sign up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Log in\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './Header.module.css';\r\n\r\nexport default function Header() {\r\n   const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n   return (\r\n      <header className={s.container}>\r\n\r\n         <Navigation />\r\n         {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      </header>\r\n   );\r\n};","import React from 'react';\r\nimport Header from '../Header/Header'\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n   return (\r\n      <>\r\n         <Header />\r\n         <main>\r\n            {children}\r\n         </main>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\n\r\nconst Section = ({ children }) => {\r\n   return (\r\n      <>\r\n         <section className={s.container}>\r\n            {children}\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Section;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const token = useSelector(authSelectors.getToken);\n\n  return (\n    <Route {...routeProps}>\n      {token ? (children) : (<Redirect to={redirectTo} />)}\n    </Route>\n  );\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const token = useSelector(authSelectors.getToken);\n\n  return (\n\n    <Route {...routeProps}>\n      {token && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n};","import React, { useEffect, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport Layout from 'components/Layout/Layout';\r\nimport Section from 'components/Section/Section';\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute/PublicRoute';\r\nimport Spinner from './components/Spinner/Spinner';\r\n\r\nconst HomePage = lazy(() => import('./pages/HomePage/HomePage'));\r\nconst RegisterPage = lazy(() => import('./pages/RegisterPage/RegisterPage'));\r\nconst LoginPage = lazy(() => import('./pages/LoginPage/LoginPage'));\r\nconst PhoneBookPage = lazy(() => import('./pages/PhoneBookPage'));\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Section>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <PublicRoute\r\n              exact\r\n              path=\"/\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={HomePage} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={RegisterPage} />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={LoginPage} />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              redirectTo=\"/login\"\r\n              component={PhoneBookPage}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Section>\r\n    </Layout>\r\n  );\r\n}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n   fetchContactRequest,\r\n   fetchContactSuccess,\r\n   fetchContactError,\r\n   addContactRequest,\r\n   addContactSuccess,\r\n   addContactError,\r\n   deleteContactRequest,\r\n   deleteContactSuccess,\r\n   deleteContactError,\r\n   changeFilter,\r\n   clearError\r\n} from './phonebook-actions';\r\n\r\nconst initialState = {\r\n   contacts: [],\r\n   filter: '',\r\n   loading: false,\r\n   error: null,\r\n};\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n   [fetchContactSuccess]: (_, { payload }) => payload,\r\n   [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n   [deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n   [fetchContactRequest]: () => true,\r\n   [fetchContactSuccess]: () => false,\r\n   [fetchContactError]: () => false,\r\n   [addContactRequest]: () => true,\r\n   [addContactSuccess]: () => false,\r\n   [addContactError]: () => false,\r\n   [deleteContactRequest]: () => true,\r\n   [deleteContactSuccess]: () => false,\r\n   [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n   [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n   [fetchContactError]: setError,\r\n   [addContactError]: setError,\r\n   [deleteContactError]: setError,\r\n   [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n   contacts,\r\n   filter,\r\n   loading,\r\n   error\r\n});","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n    name: null,\n    email: null\n};\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null\n});\n\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n    [authActions.clearError]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]:() => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false\n});\n\nconst loading = createReducer(false, {\n    [authActions.registerSuccess]: () => false,\n    [authActions.registerRequest]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginSuccess]: () => false,\n    [authActions.loginRequest]: () => true,\n    [authActions.loginError]: () => false,\n    [authActions.logoutRequest]: () => true,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.logoutError]: () => false,\n    [authActions.getCurrentUserRequest]: () => true,\n    [authActions.getCurrentUserSuccess]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.clearError]: () => false,\n});\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    loading,\n    error\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n//import logger from 'redux-logger';\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n   ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n   }),\r\n   //logger\r\n];\r\n\r\nconst authPersistConfig = {\r\n   key: 'auth',\r\n   storage,\r\n   whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      auth: persistReducer(authPersistConfig, authReducer),\r\n      phonebook: phonebookReducer\r\n   },\r\n   middleware,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate\r\n      loading={<Spinner />}\r\n      persistor={store.persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider >,\r\n  document.getElementById('root'),\r\n);\r\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const clearError = createAction('contacts/clearError');","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getError = state => state.auth.error;\n\nconst getToken = state => state.auth.token;\n\nconst getLoading = state => state.auth.loading;\n\nconst authSelectors = {\n    getIsAuthenticated,\n    getUsername,\n    getError,\n    getToken,\n    getLoading\n};\n\nexport default authSelectors;","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => (\r\n   <Loader\r\n      type=\"TailSpin\"\r\n      color=\"blue\"\r\n      height={100}\r\n      width={100}\r\n      timeout={300}\r\n   />\r\n);\r\n\r\nexport default Spinner;","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credential => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credential);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credential => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/login', credential);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const { auth: { token: persistedToken }, } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    //На случай если в локал сторедж остался какой-то токен чтобы его почистить\n    dispatch(authActions.logoutSuccess());\n  }\n};\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser\n};\n\nexport default authOperations;","import { createAction } from '@reduxjs/toolkit';\n\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerRequest = createAction('auth/registerRequest');\nconst registerError = createAction('auth/registerError');\n\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginRequest = createAction('auth/loginRequest');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst clearError = createAction('auth/clearError');\n\nconst authActions = {\n    registerSuccess,\n    registerRequest,\n    registerError,\n    loginSuccess,\n    loginRequest,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n    clearError\n};\n\nexport default authActions;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__omdBi\",\"avatar\":\"UserMenu_avatar__3EqNX\",\"name\":\"UserMenu_name__1pRjG\",\"button\":\"UserMenu_button__18KwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__tCHEx\",\"appear\":\"Header_appear__1O9Xm\",\"appearActive\":\"Header_appearActive__1VsY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2Ya_V\"};"],"sourceRoot":""}